openapi: 3.0.3
info:
  title: Frikanalen Django API
  version: 1.1.0
  description: API for Frikanalen
paths:
  /api/:
    get:
      operationId: root_retrieve
      description: The root of the FK API / web services
      responses:
        '200':
          description: No response body
      security:
        - tokenAuth: []
        - cookieAuth: []
        - {}
  /api/asrun/:
    get:
      operationId: asrun_list
      description: |-
        AsRun model is a historic log over what was sent through playout.

        Query parameters
        ----------------

        `page_size` - How many items per page. If set to 0 it will list
                      all items.  Default is 50 items.

        `ordering` - You can order the results by any visible field.
                     Prepend a minus to order in descending order.  I.e.
                     `?ordering=-played_at` to show newest items first.
      parameters:
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          schema:
            type: integer
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAsRunList'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - asrun
    post:
      operationId: asrun_create
      description: |-
        AsRun model is a historic log over what was sent through playout.

        Query parameters
        ----------------

        `page_size` - How many items per page. If set to 0 it will list
                      all items.  Default is 50 items.

        `ordering` - You can order the results by any visible field.
                     Prepend a minus to order in descending order.  I.e.
                     `?ordering=-played_at` to show newest items first.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsRunRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsRun'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - asrun
  '/api/asrun/{id}/':
    get:
      operationId: asrun_retrieve
      description: |-
        AsRun model is a historic log over what was sent through playout.

        Query parameters
        ----------------

        `page_size` - How many items per page. If set to 0 it will list
                      all items.  Default is 50 items.

        `ordering` - You can order the results by any visible field.
                     Prepend a minus to order in descending order.  I.e.
                     `?ordering=-played_at` to show newest items first.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this as run.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsRun'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - asrun
    put:
      operationId: asrun_update
      description: |-
        AsRun model is a historic log over what was sent through playout.

        Query parameters
        ----------------

        `page_size` - How many items per page. If set to 0 it will list
                      all items.  Default is 50 items.

        `ordering` - You can order the results by any visible field.
                     Prepend a minus to order in descending order.  I.e.
                     `?ordering=-played_at` to show newest items first.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this as run.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsRunRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsRun'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - asrun
    patch:
      operationId: asrun_partial_update
      description: |-
        AsRun model is a historic log over what was sent through playout.

        Query parameters
        ----------------

        `page_size` - How many items per page. If set to 0 it will list
                      all items.  Default is 50 items.

        `ordering` - You can order the results by any visible field.
                     Prepend a minus to order in descending order.  I.e.
                     `?ordering=-played_at` to show newest items first.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this as run.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAsRunRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsRun'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - asrun
    delete:
      operationId: asrun_destroy
      description: |-
        AsRun model is a historic log over what was sent through playout.

        Query parameters
        ----------------

        `page_size` - How many items per page. If set to 0 it will list
                      all items.  Default is 50 items.

        `ordering` - You can order the results by any visible field.
                     Prepend a minus to order in descending order.  I.e.
                     `?ordering=-played_at` to show newest items first.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this as run.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No response body
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - asrun
  /api/categories/:
    get:
      operationId: categories_list
      parameters:
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          schema:
            type: integer
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - categories
    post:
      operationId: categories_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - categories
  '/api/categories/{id}/':
    get:
      operationId: categories_retrieve
      parameters:
        - name: id
          in: path
          description: A unique value identifying this video category.
          required: true
          schema:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - categories
    put:
      operationId: categories_update
      parameters:
        - name: id
          in: path
          description: A unique value identifying this video category.
          required: true
          schema:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - categories
    patch:
      operationId: categories_partial_update
      parameters:
        - name: id
          in: path
          description: A unique value identifying this video category.
          required: true
          schema:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - categories
    delete:
      operationId: categories_destroy
      parameters:
        - name: id
          in: path
          description: A unique value identifying this video category.
          required: true
          schema:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
      responses:
        '204':
          description: No response body
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - categories
  /api/csrf/:
    get:
      operationId: csrf_retrieve
      responses:
        '200':
          description: No response body
      security:
        - {}
      tags:
        - csrf
  /api/jukebox_csv:
    get:
      operationId: jukebox_csv_retrieve
      responses:
        '200':
          description: No response body
      security:
        - tokenAuth: []
        - cookieAuth: []
        - {}
      tags:
        - jukebox_csv
  /api/news/bulletins/:
    get:
      operationId: news_bulletins_list
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bulletin'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - news
    post:
      operationId: news_bulletins_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulletinRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bulletin'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - news
  '/api/news/bulletins/{id}/':
    get:
      operationId: news_bulletins_retrieve
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this bulletin.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bulletin'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - news
    put:
      operationId: news_bulletins_update
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this bulletin.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulletinRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bulletin'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - news
    patch:
      operationId: news_bulletins_partial_update
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this bulletin.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBulletinRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bulletin'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - news
    delete:
      operationId: news_bulletins_destroy
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this bulletin.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No response body
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - news
  /api/obtain-token:
    post:
      operationId: obtain_token_create
      description: |-
        If we don't restrict this to JSON-only, the Python generated
        code tries to both send form-multipart and JSON.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - obtain-token
  /api/organization/:
    get:
      operationId: organization_list
      parameters:
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          schema:
            type: integer
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - organization
    post:
      operationId: organization_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - organization
  '/api/organization/{id}':
    get:
      operationId: organization_retrieve
      description: Video file details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - organization
    put:
      operationId: organization_update
      description: Video file details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - organization
    patch:
      operationId: organization_partial_update
      description: Video file details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - organization
    delete:
      operationId: organization_destroy
      description: Video file details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      responses:
        '204':
          description: No response body
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - organization
  /api/scheduleitems/:
    get:
      operationId: scheduleitems_list
      description: |-
        Video events schedule

        list:
        Query parameters
        ----------------
        `date`: YYYY-MM-DD or 'today' (Europe/Oslo). Defaults to today.

        `days`: Number of days. Defaults to 1.

        `surrounding`: Include event before and after the window.

        `ordering`: Field to order by. Prefix '-' for desc. Defaults to 'starttime'.
      parameters:
        - name: date
          in: query
          schema:
            type: string
        - name: days
          in: query
          schema:
            type: number
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          schema:
            type: integer
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: surrounding
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScheduleitemReadList'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - scheduleitems
    post:
      operationId: scheduleitems_create
      description: |-
        Video events schedule

        list:
        Query parameters
        ----------------
        `date`: YYYY-MM-DD or 'today' (Europe/Oslo). Defaults to today.

        `days`: Number of days. Defaults to 1.

        `surrounding`: Include event before and after the window.

        `ordering`: Field to order by. Prefix '-' for desc. Defaults to 'starttime'.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleitemModifyRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleitemModify'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - scheduleitems
  '/api/scheduleitems/{id}/':
    get:
      operationId: scheduleitems_retrieve
      description: |-
        Video events schedule

        list:
        Query parameters
        ----------------
        `date`: YYYY-MM-DD or 'today' (Europe/Oslo). Defaults to today.

        `days`: Number of days. Defaults to 1.

        `surrounding`: Include event before and after the window.

        `ordering`: Field to order by. Prefix '-' for desc. Defaults to 'starttime'.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this TX schedule entry.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleitemRead'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - scheduleitems
    put:
      operationId: scheduleitems_update
      description: |-
        Video events schedule

        list:
        Query parameters
        ----------------
        `date`: YYYY-MM-DD or 'today' (Europe/Oslo). Defaults to today.

        `days`: Number of days. Defaults to 1.

        `surrounding`: Include event before and after the window.

        `ordering`: Field to order by. Prefix '-' for desc. Defaults to 'starttime'.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this TX schedule entry.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleitemModifyRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleitemModify'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - scheduleitems
    patch:
      operationId: scheduleitems_partial_update
      description: |-
        Video events schedule

        list:
        Query parameters
        ----------------
        `date`: YYYY-MM-DD or 'today' (Europe/Oslo). Defaults to today.

        `days`: Number of days. Defaults to 1.

        `surrounding`: Include event before and after the window.

        `ordering`: Field to order by. Prefix '-' for desc. Defaults to 'starttime'.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this TX schedule entry.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScheduleitemModifyRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleitemModify'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - scheduleitems
    delete:
      operationId: scheduleitems_destroy
      description: |-
        Video events schedule

        list:
        Query parameters
        ----------------
        `date`: YYYY-MM-DD or 'today' (Europe/Oslo). Defaults to today.

        `days`: Number of days. Defaults to 1.

        `surrounding`: Include event before and after the window.

        `ordering`: Field to order by. Prefix '-' for desc. Defaults to 'starttime'.
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this TX schedule entry.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No response body
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - scheduleitems
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
        - name: format
          in: query
          schema:
            type: string
            enum:
              - json
              - yaml
        - name: lang
          in: query
          schema:
            type: string
            enum:
              - af
              - ar
              - ar-dz
              - ast
              - az
              - be
              - bg
              - bn
              - br
              - bs
              - ca
              - ckb
              - cs
              - cy
              - da
              - de
              - dsb
              - el
              - en
              - en-au
              - en-gb
              - eo
              - es
              - es-ar
              - es-co
              - es-mx
              - es-ni
              - es-ve
              - et
              - eu
              - fa
              - fi
              - fr
              - fy
              - ga
              - gd
              - gl
              - he
              - hi
              - hr
              - hsb
              - hu
              - hy
              - ia
              - id
              - ig
              - io
              - is
              - it
              - ja
              - ka
              - kab
              - kk
              - km
              - kn
              - ko
              - ky
              - lb
              - lt
              - lv
              - mk
              - ml
              - mn
              - mr
              - ms
              - my
              - nb
              - ne
              - nl
              - nn
              - os
              - pa
              - pl
              - pt
              - pt-br
              - ro
              - ru
              - sk
              - sl
              - sq
              - sr
              - sr-latn
              - sv
              - sw
              - ta
              - te
              - tg
              - th
              - tk
              - tr
              - tt
              - udm
              - ug
              - uk
              - ur
              - uz
              - vi
              - zh-hans
              - zh-hant
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
      security:
        - tokenAuth: []
        - cookieAuth: []
        - {}
      tags:
        - schema
  /api/user:
    get:
      operationId: user_retrieve
      description: User details - used to manage your own user
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - user
    put:
      operationId: user_update
      description: User details - used to manage your own user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - user
    patch:
      operationId: user_partial_update
      description: User details - used to manage your own user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - user
    delete:
      operationId: user_destroy
      description: User details - used to manage your own user
      responses:
        '204':
          description: No response body
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - user
  /api/user/login:
    post:
      operationId: user_login_create
      description: Sets a session cookie for the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
      security:
        - tokenAuth: []
        - cookieAuth: []
        - {}
      tags:
        - user
  /api/user/logout:
    post:
      operationId: user_logout_create
      responses:
        '200':
          description: No response body
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - user
  /api/user/register:
    post:
      operationId: user_register_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUser'
      security:
        - tokenAuth: []
        - cookieAuth: []
        - {}
      tags:
        - user
  /api/videofiles/:
    get:
      operationId: videofiles_list
      description: Video file list and detail endpoint.
      parameters:
        - name: created_time_after
          in: query
          schema:
            type: string
            format: date-time
        - name: created_time_before
          in: query
          schema:
            type: string
            format: date-time
        - name: format__fsname
          in: query
          description: |-
            * `large_thumb` - large_thumb
            * `broadcast` - broadcast
            * `vc1` - vc1
            * `med_thumb` - med_thumb
            * `small_thumb` - small_thumb
            * `original` - original
            * `theora` - theora
            * `srt` - srt
            * `cloudflare_id` - cloudflare_id
          schema:
            type: string
            enum:
              - broadcast
              - cloudflare_id
              - large_thumb
              - med_thumb
              - original
              - small_thumb
              - srt
              - theora
              - vc1
        - name: integrated_lufs__isnull
          in: query
          schema:
            type: boolean
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          schema:
            type: integer
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: video_id
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoFileList'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videofiles
    post:
      operationId: videofiles_create
      description: Video file list and detail endpoint.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoFileRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoFile'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videofiles
  '/api/videofiles/{id}':
    get:
      operationId: videofiles_retrieve
      description: Video file list and detail endpoint.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoFile'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videofiles
    put:
      operationId: videofiles_update
      description: Video file list and detail endpoint.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoFileRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoFile'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videofiles
    patch:
      operationId: videofiles_partial_update
      description: Video file list and detail endpoint.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideoFileRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoFile'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videofiles
    delete:
      operationId: videofiles_destroy
      description: Video file list and detail endpoint.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      responses:
        '204':
          description: No response body
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videofiles
  /api/videos/:
    get:
      operationId: videos_list
      description: |-
        List of videos

        Query parameters
        ----------------

        `q` - Free search query.

        `page_size` - How many items per page. If set to 0 it will list
                      all items.  Default is 50 items.

        `ordering` - Order results by specified field.  Prepend a minus for
                     descending order.  I.e. `?ordering=-id`.

        `creator__email` - the email of the video's creator

        `framerate` - the framerate in hz * 1000

        `has_tono_records` - if the tono flag is set (true/false)

        `is_filler` - if this is a filler video (true/false)

        `name` - the exact name/title of the video

        `name__icontains` - substring is part of name/title of the video

        `organization` - Frikanalen ID of organization behind video

        `played_count_web` - the number of times this video was played on the web

        `played_count_web__gt` - greater than

        `played_count_web__gte` - greater than or equal

        `played_count_web__lt`  - less than

        `played_count_web__lte` - less than or equal

        `publish_on_web` - if this video is published ont the web (true/false)

        `proper_import` - if the uploaded video was properly imported (true/false)

        `ref_url` - the exact reference url

        `ref_url__startswith` - the reference url start with this string

        `ref_url__icontains` - the reference url contain this string
      parameters:
        - name: categories__name__icontains
          in: query
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - name: created_time_after
          in: query
          schema:
            type: string
            format: date-time
        - name: created_time_before
          in: query
          schema:
            type: string
            format: date-time
        - name: creator__email
          in: query
          schema:
            type: string
        - name: duration
          in: query
          schema:
            type: string
            format: duration
        - name: duration__gt
          in: query
          schema:
            type: string
            format: duration
        - name: duration__gte
          in: query
          schema:
            type: string
            format: duration
        - name: duration__lt
          in: query
          schema:
            type: string
            format: duration
        - name: duration__lte
          in: query
          schema:
            type: string
            format: duration
        - name: framerate
          in: query
          schema:
            type: integer
        - name: has_tono_records
          in: query
          schema:
            type: boolean
        - name: is_filler
          in: query
          schema:
            type: boolean
        - name: limit
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
        - name: name
          in: query
          schema:
            type: string
        - name: name__icontains
          in: query
          schema:
            type: string
        - name: offset
          in: query
          description: The initial index from which to return the results.
          required: false
          schema:
            type: integer
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: organization
          in: query
          schema:
            type: integer
        - name: played_count_web
          in: query
          schema:
            type: integer
        - name: played_count_web__gt
          in: query
          schema:
            type: integer
        - name: played_count_web__gte
          in: query
          schema:
            type: integer
        - name: played_count_web__lt
          in: query
          schema:
            type: integer
        - name: played_count_web__lte
          in: query
          schema:
            type: integer
        - name: publish_on_web
          in: query
          schema:
            type: boolean
        - name: q
          in: query
          description: Free-text search
          schema:
            type: string
        - name: ref_url
          in: query
          schema:
            type: string
        - name: ref_url__icontains
          in: query
          schema:
            type: string
        - name: ref_url__startswith
          in: query
          schema:
            type: string
        - name: updated_time_after
          in: query
          schema:
            type: string
            format: date-time
        - name: updated_time_before
          in: query
          schema:
            type: string
            format: date-time
        - name: uploaded_time_after
          in: query
          schema:
            type: string
            format: date-time
        - name: uploaded_time_before
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoList'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videos
    post:
      operationId: videos_create
      description: |-
        List of videos

        Query parameters
        ----------------

        `q` - Free search query.

        `page_size` - How many items per page. If set to 0 it will list
                      all items.  Default is 50 items.

        `ordering` - Order results by specified field.  Prepend a minus for
                     descending order.  I.e. `?ordering=-id`.

        `creator__email` - the email of the video's creator

        `framerate` - the framerate in hz * 1000

        `has_tono_records` - if the tono flag is set (true/false)

        `is_filler` - if this is a filler video (true/false)

        `name` - the exact name/title of the video

        `name__icontains` - substring is part of name/title of the video

        `organization` - Frikanalen ID of organization behind video

        `played_count_web` - the number of times this video was played on the web

        `played_count_web__gt` - greater than

        `played_count_web__gte` - greater than or equal

        `played_count_web__lt`  - less than

        `played_count_web__lte` - less than or equal

        `publish_on_web` - if this video is published ont the web (true/false)

        `proper_import` - if the uploaded video was properly imported (true/false)

        `ref_url` - the exact reference url

        `ref_url__startswith` - the reference url start with this string

        `ref_url__icontains` - the reference url contain this string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoCreateRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoCreate'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videos
  '/api/videos/{id}':
    get:
      operationId: videos_retrieve
      description: Video details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videos
    put:
      operationId: videos_update
      description: Video details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videos
    patch:
      operationId: videos_partial_update
      description: Video details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideoRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videos
    delete:
      operationId: videos_destroy
      description: Video details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      responses:
        '204':
          description: No response body
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videos
  '/api/videos/{id}/upload_token':
    get:
      operationId: videos_upload_token_retrieve
      description: Video details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: ^\d+$
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoUploadToken'
      security:
        - tokenAuth: []
        - cookieAuth: []
      tags:
        - videos
components:
  schemas:
    AsRun:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        video:
          description: Points to the Video which was played if there is one. Can be empty if something other than a video was played. The field is mutually exclusive with `programName`.
          type: integer
          nullable: true
        programName:
          description: 'A free form text input saying what was played. If `video` is set, this field should not be set. Examples of where you''d use this field is e.g. when broadcasting live. Defaults to the empty string.'
          type: string
          maxLength: 160
        playout:
          description: The playout this entry corresponds with. This will almost always be 'main' which it defaults to.
          type: string
          maxLength: 255
        playedAt:
          description: Time when the playout started. Defaults to now.
          type: string
          format: date-time
        inMs:
          description: The inpoint where the video/stream was started at. In milliseconds. Normally 0 which it defaults to.
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        outMs:
          description: 'The outpoint where the video/stream stopped. This would often be the duration of the video, or how long we live streamed a particular URL. Can be null (None) if this is ''currently happening''.'
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
      required:
        - id
    AsRunRequest:
      type: object
      properties:
        video:
          description: Points to the Video which was played if there is one. Can be empty if something other than a video was played. The field is mutually exclusive with `programName`.
          type: integer
          nullable: true
        programName:
          description: 'A free form text input saying what was played. If `video` is set, this field should not be set. Examples of where you''d use this field is e.g. when broadcasting live. Defaults to the empty string.'
          type: string
          maxLength: 160
        playout:
          description: The playout this entry corresponds with. This will almost always be 'main' which it defaults to.
          type: string
          maxLength: 255
        playedAt:
          description: Time when the playout started. Defaults to now.
          type: string
          format: date-time
        inMs:
          description: The inpoint where the video/stream was started at. In milliseconds. Normally 0 which it defaults to.
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        outMs:
          description: 'The outpoint where the video/stream stopped. This would often be the duration of the video, or how long we live streamed a particular URL. Can be null (None) if this is ''currently happening''.'
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
    AuthToken:
      type: object
      properties:
        token:
          type: string
          readOnly: true
      required:
        - token
    AuthTokenRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          writeOnly: true
        password:
          type: string
          minLength: 1
          writeOnly: true
      required:
        - password
        - username
    Bulletin:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        heading:
          type: string
          maxLength: 80
        text:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
      required:
        - created
        - heading
        - id
        - text
    BulletinRequest:
      type: object
      properties:
        heading:
          type: string
          maxLength: 80
          minLength: 1
        text:
          type: string
          minLength: 1
      required:
        - heading
        - text
    Category:
      type: object
      properties:
        id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        name:
          type: string
          maxLength: 255
        desc:
          type: string
          maxLength: 255
        videocount:
          type: string
          readOnly: true
      required:
        - id
        - name
        - videocount
    CategoryRequest:
      type: object
      properties:
        id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        name:
          type: string
          maxLength: 255
          minLength: 1
        desc:
          type: string
          maxLength: 255
      required:
        - id
        - name
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
        - email
        - password
    NewUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
          title: Email address
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
          nullable: true
      required:
        - email
        - firstName
        - id
        - lastName
    NewUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
          minLength: 1
          title: Email address
        firstName:
          type: string
          minLength: 1
        lastName:
          type: string
          minLength: 1
        dateOfBirth:
          type: string
          format: date
          nullable: true
        password:
          type: string
          minLength: 1
          writeOnly: true
      required:
        - email
        - firstName
        - lastName
        - password
    Organization:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        homepage:
          type: string
          maxLength: 255
          nullable: true
          title: Link back to the organisation home page.
        description:
          type: string
          maxLength: 255
        postalAddress:
          type: string
          maxLength: 2048
          nullable: true
          title: Postal address for organization.
        streetAddress:
          type: string
          maxLength: 2048
          nullable: true
          title: Street address for organization.
        editorId:
          type: integer
          nullable: true
          readOnly: true
        editorName:
          type: string
          readOnly: true
        editorEmail:
          type: string
          readOnly: true
        editorMsisdn:
          type: string
          readOnly: true
        fkmember:
          type: boolean
          readOnly: true
      required:
        - editorEmail
        - editorId
        - editorMsisdn
        - editorName
        - fkmember
        - id
        - name
    OrganizationRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
        homepage:
          type: string
          maxLength: 255
          nullable: true
          title: Link back to the organisation home page.
        description:
          type: string
          maxLength: 255
        postalAddress:
          type: string
          maxLength: 2048
          nullable: true
          title: Postal address for organization.
        streetAddress:
          type: string
          maxLength: 2048
          nullable: true
          title: Street address for organization.
      required:
        - name
    PaginatedAsRunList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          format: uri
          example: 'http://api.example.org/accounts/?offset=400&limit=100'
          nullable: true
        previous:
          type: string
          format: uri
          example: 'http://api.example.org/accounts/?offset=200&limit=100'
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/AsRun'
      required:
        - count
        - results
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          format: uri
          example: 'http://api.example.org/accounts/?offset=400&limit=100'
          nullable: true
        previous:
          type: string
          format: uri
          example: 'http://api.example.org/accounts/?offset=200&limit=100'
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
      required:
        - count
        - results
    PaginatedOrganizationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          format: uri
          example: 'http://api.example.org/accounts/?offset=400&limit=100'
          nullable: true
        previous:
          type: string
          format: uri
          example: 'http://api.example.org/accounts/?offset=200&limit=100'
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
      required:
        - count
        - results
    PaginatedScheduleitemReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          format: uri
          example: 'http://api.example.org/accounts/?offset=400&limit=100'
          nullable: true
        previous:
          type: string
          format: uri
          example: 'http://api.example.org/accounts/?offset=200&limit=100'
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleitemRead'
      required:
        - count
        - results
    PaginatedVideoFileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          format: uri
          example: 'http://api.example.org/accounts/?offset=400&limit=100'
          nullable: true
        previous:
          type: string
          format: uri
          example: 'http://api.example.org/accounts/?offset=200&limit=100'
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/VideoFile'
      required:
        - count
        - results
    PaginatedVideoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          format: uri
          example: 'http://api.example.org/accounts/?offset=400&limit=100'
          nullable: true
        previous:
          type: string
          format: uri
          example: 'http://api.example.org/accounts/?offset=200&limit=100'
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Video'
      required:
        - count
        - results
    PatchedAsRunRequest:
      type: object
      properties:
        video:
          description: Points to the Video which was played if there is one. Can be empty if something other than a video was played. The field is mutually exclusive with `programName`.
          type: integer
          nullable: true
        programName:
          description: 'A free form text input saying what was played. If `video` is set, this field should not be set. Examples of where you''d use this field is e.g. when broadcasting live. Defaults to the empty string.'
          type: string
          maxLength: 160
        playout:
          description: The playout this entry corresponds with. This will almost always be 'main' which it defaults to.
          type: string
          maxLength: 255
        playedAt:
          description: Time when the playout started. Defaults to now.
          type: string
          format: date-time
        inMs:
          description: The inpoint where the video/stream was started at. In milliseconds. Normally 0 which it defaults to.
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        outMs:
          description: 'The outpoint where the video/stream stopped. This would often be the duration of the video, or how long we live streamed a particular URL. Can be null (None) if this is ''currently happening''.'
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
    PatchedBulletinRequest:
      type: object
      properties:
        heading:
          type: string
          maxLength: 80
          minLength: 1
        text:
          type: string
          minLength: 1
    PatchedCategoryRequest:
      type: object
      properties:
        id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        name:
          type: string
          maxLength: 255
          minLength: 1
        desc:
          type: string
          maxLength: 255
    PatchedOrganizationRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
        homepage:
          type: string
          maxLength: 255
          nullable: true
          title: Link back to the organisation home page.
        description:
          type: string
          maxLength: 255
        postalAddress:
          type: string
          maxLength: 2048
          nullable: true
          title: Postal address for organization.
        streetAddress:
          type: string
          maxLength: 2048
          nullable: true
          title: Street address for organization.
    PatchedScheduleitemModifyRequest:
      type: object
      properties:
        video:
          type: integer
          nullable: true
        schedulereason:
          allOf:
            - $ref: '#/components/schemas/SchedulereasonEnum'
          maximum: 2147483647
          minimum: -2147483648
        starttime:
          type: string
          format: date-time
        duration:
          type: string
    PatchedUserRequest:
      type: object
      properties:
        firstName:
          type: string
          maxLength: 30
        lastName:
          type: string
          maxLength: 30
        dateOfBirth:
          type: string
          format: date
          nullable: true
        phoneNumber:
          description: Phone number at which this user can be reached
          type: string
          maxLength: 128
        password:
          type: string
          minLength: 1
          writeOnly: true
    PatchedVideoFileRequest:
      type: object
      properties:
        video:
          type: integer
        format:
          type: integer
        filename:
          type: string
          maxLength: 256
          minLength: 1
        integratedLufs:
          type: number
          format: double
          nullable: true
          title: Integrated LUFS of file defined in ITU R.128
        truepeakLufs:
          type: number
          format: double
          nullable: true
          title: True peak LUFS of file defined in ITU R.128
    PatchedVideoRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
        header:
          type: string
          maxLength: 2048
          nullable: true
        description:
          type: string
          maxLength: 2048
          nullable: true
        creator:
          type: string
          format: email
          minLength: 1
          title: Email address
        duration:
          type: string
        categories:
          type: array
          items:
            type: string
            minLength: 1
        properImport:
          description: Has the video been properly imported?
          type: boolean
        hasTonoRecords:
          type: boolean
        publishOnWeb:
          type: boolean
        isFiller:
          description: You still have the editorial responsibility.  Only affect videos from members.
          type: boolean
          title: Play automatically?
        refUrl:
          description: URL for reference
          type: string
          maxLength: 1024
        uploadedTime:
          description: Time the original video for the program was uploaded
          type: string
          format: date-time
          nullable: true
    ScheduleitemModify:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        video:
          type: integer
          nullable: true
        schedulereason:
          allOf:
            - $ref: '#/components/schemas/SchedulereasonEnum'
          maximum: 2147483647
          minimum: -2147483648
        starttime:
          type: string
          format: date-time
        endtime:
          type: string
          format: date-time
          readOnly: true
        duration:
          type: string
      required:
        - duration
        - endtime
        - id
        - starttime
    ScheduleitemModifyRequest:
      type: object
      properties:
        video:
          type: integer
          nullable: true
        schedulereason:
          allOf:
            - $ref: '#/components/schemas/SchedulereasonEnum'
          maximum: 2147483647
          minimum: -2147483648
        starttime:
          type: string
          format: date-time
        duration:
          type: string
      required:
        - duration
        - starttime
    ScheduleitemOrganization:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
      required:
        - description
        - id
        - name
    ScheduleitemRead:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        video:
          $ref: '#/components/schemas/ScheduleitemVideo'
        starttime:
          type: string
          format: date-time
        endtime:
          type: string
          format: date-time
          readOnly: true
      required:
        - endtime
        - id
        - starttime
        - video
    ScheduleitemVideo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        header:
          type: string
          maxLength: 2048
          nullable: true
        description:
          type: string
          maxLength: 2048
          nullable: true
        organization:
          allOf:
            - $ref: '#/components/schemas/ScheduleitemOrganization'
          readOnly: true
        categories:
          type: array
          items:
            type: string
      required:
        - categories
        - id
        - name
        - organization
    SchedulereasonEnum:
      description: |-
        * `1` - Legacy
        * `2` - Administrative
        * `3` - User
        * `4` - Automatic
        * `5` - Jukebox
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
    SimpleOrg:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
        - id
        - name
    SimpleOrgRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
      required:
        - name
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        isStaff:
          type: string
          readOnly: true
        dateJoined:
          type: string
          format: date-time
          readOnly: true
        editorOf:
          type: array
          items:
            $ref: '#/components/schemas/SimpleOrg'
          readOnly: true
        memberOf:
          type: array
          items:
            $ref: '#/components/schemas/SimpleOrg'
          readOnly: true
        firstName:
          type: string
          maxLength: 30
        lastName:
          type: string
          maxLength: 30
        dateOfBirth:
          type: string
          format: date
          nullable: true
        phoneNumber:
          description: Phone number at which this user can be reached
          type: string
          maxLength: 128
      required:
        - dateJoined
        - editorOf
        - email
        - id
        - isStaff
        - memberOf
    UserRequest:
      type: object
      properties:
        firstName:
          type: string
          maxLength: 30
        lastName:
          type: string
          maxLength: 30
        dateOfBirth:
          type: string
          format: date
          nullable: true
        phoneNumber:
          description: Phone number at which this user can be reached
          type: string
          maxLength: 128
        password:
          type: string
          minLength: 1
          writeOnly: true
    Video:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        header:
          type: string
          maxLength: 2048
          nullable: true
        description:
          type: string
          maxLength: 2048
          nullable: true
        files:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        creator:
          type: string
          format: email
          title: Email address
        organization:
          allOf:
            - $ref: '#/components/schemas/Organization'
          readOnly: true
        duration:
          type: string
        categories:
          type: array
          items:
            type: string
        framerate:
          description: Framerate of master video in thousands / second
          type: integer
          readOnly: true
        properImport:
          description: Has the video been properly imported?
          type: boolean
        hasTonoRecords:
          type: boolean
        publishOnWeb:
          type: boolean
        isFiller:
          description: You still have the editorial responsibility.  Only affect videos from members.
          type: boolean
          title: Play automatically?
        refUrl:
          description: URL for reference
          type: string
          maxLength: 1024
        createdTime:
          description: Time the program record was created
          type: string
          format: date-time
          nullable: true
          readOnly: true
        updatedTime:
          description: Time the program record has been updated
          type: string
          format: date-time
          nullable: true
          readOnly: true
        uploadedTime:
          description: Time the original video for the program was uploaded
          type: string
          format: date-time
          nullable: true
        ogvUrl:
          type: string
          readOnly: true
        largeThumbnailUrl:
          type: string
          readOnly: true
      required:
        - categories
        - createdTime
        - files
        - framerate
        - id
        - largeThumbnailUrl
        - name
        - ogvUrl
        - organization
        - updatedTime
    VideoCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        header:
          type: string
          maxLength: 2048
          nullable: true
        description:
          type: string
          maxLength: 2048
          nullable: true
        files:
          type: object
          additionalProperties:
            type: string
          readOnly: true
        creator:
          type: string
          format: email
          title: Email address
        organization:
          type: integer
        duration:
          type: string
        categories:
          type: array
          items:
            type: string
        framerate:
          description: Framerate of master video in thousands / second
          type: integer
          readOnly: true
        properImport:
          description: Has the video been properly imported?
          type: boolean
        hasTonoRecords:
          type: boolean
        publishOnWeb:
          type: boolean
        isFiller:
          description: You still have the editorial responsibility.  Only affect videos from members.
          type: boolean
          title: Play automatically?
        refUrl:
          description: URL for reference
          type: string
          maxLength: 1024
        createdTime:
          description: Time the program record was created
          type: string
          format: date-time
          nullable: true
          readOnly: true
        updatedTime:
          description: Time the program record has been updated
          type: string
          format: date-time
          nullable: true
          readOnly: true
        uploadedTime:
          description: Time the original video for the program was uploaded
          type: string
          format: date-time
          nullable: true
        ogvUrl:
          type: string
          readOnly: true
        largeThumbnailUrl:
          type: string
          readOnly: true
      required:
        - categories
        - createdTime
        - files
        - framerate
        - id
        - largeThumbnailUrl
        - name
        - ogvUrl
        - updatedTime
    VideoCreateRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
        header:
          type: string
          maxLength: 2048
          nullable: true
        description:
          type: string
          maxLength: 2048
          nullable: true
        creator:
          type: string
          format: email
          minLength: 1
          title: Email address
        organization:
          type: integer
        duration:
          type: string
        categories:
          type: array
          items:
            type: string
            minLength: 1
        properImport:
          description: Has the video been properly imported?
          type: boolean
        hasTonoRecords:
          type: boolean
        publishOnWeb:
          type: boolean
        isFiller:
          description: You still have the editorial responsibility.  Only affect videos from members.
          type: boolean
          title: Play automatically?
        refUrl:
          description: URL for reference
          type: string
          maxLength: 1024
        uploadedTime:
          description: Time the original video for the program was uploaded
          type: string
          format: date-time
          nullable: true
      required:
        - categories
        - name
    VideoFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        createdTime:
          description: Time the video file was created
          type: string
          format: date-time
          nullable: true
          readOnly: true
        video:
          type: integer
        format:
          type: integer
        filename:
          type: string
          maxLength: 256
        integratedLufs:
          type: number
          format: double
          nullable: true
          title: Integrated LUFS of file defined in ITU R.128
        truepeakLufs:
          type: number
          format: double
          nullable: true
          title: True peak LUFS of file defined in ITU R.128
      required:
        - createdTime
        - filename
        - format
        - id
        - video
    VideoFileRequest:
      type: object
      properties:
        video:
          type: integer
        format:
          type: integer
        filename:
          type: string
          maxLength: 256
          minLength: 1
        integratedLufs:
          type: number
          format: double
          nullable: true
          title: Integrated LUFS of file defined in ITU R.128
        truepeakLufs:
          type: number
          format: double
          nullable: true
          title: True peak LUFS of file defined in ITU R.128
      required:
        - filename
        - format
        - video
    VideoRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
        header:
          type: string
          maxLength: 2048
          nullable: true
        description:
          type: string
          maxLength: 2048
          nullable: true
        creator:
          type: string
          format: email
          minLength: 1
          title: Email address
        duration:
          type: string
        categories:
          type: array
          items:
            type: string
            minLength: 1
        properImport:
          description: Has the video been properly imported?
          type: boolean
        hasTonoRecords:
          type: boolean
        publishOnWeb:
          type: boolean
        isFiller:
          description: You still have the editorial responsibility.  Only affect videos from members.
          type: boolean
          title: Play automatically?
        refUrl:
          description: URL for reference
          type: string
          maxLength: 1024
        uploadedTime:
          description: Time the original video for the program was uploaded
          type: string
          format: date-time
          nullable: true
      required:
        - categories
        - name
    VideoUploadToken:
      type: object
      properties:
        uploadToken:
          description: Video upload token (used by fkupload/frontend)
          type: string
          maxLength: 32
        uploadUrl:
          type: string
          readOnly: true
      required:
        - uploadUrl
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
